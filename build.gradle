buildscript {

  // @formatter:off

  ext.buildConfig = [
          compileSdk  : 29,
          targetSdk   : 29,
          minSdk      : 23,
          buildTools  : '29.0.2',
          gradlePlugin: '3.6.0'
  ]

  ext.versions = [
      kotlin                : '1.3.61',
      androidx              : '1.1.0',
      constraintlayout      : '1.1.3',
      fragment              : '1.2.2',
      ktx                   : '1.2.0',
      junit                 : '4.12',
      mockito_kotlin        : '2.0.0',
      mockito_core          : '2.23.4'
  ]

  ext.deps = [
      androidx: [
          annotations       : "androidx.annotation:annotation:${versions.androidx}",
          appCompat         : "androidx.appcompat:appcompat:${versions.androidx}",
          constraintLayout  : "androidx.constraintlayout:constraintlayout:${versions.constraintlayout}",
          fragment          : "androidx.fragment:fragment-ktx:${versions.fragment}",
          ktx               : "androidx.core:core-ktx:${versions.ktx}"
      ],
      kotlin: [
          stdlib: [
              jdk           : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
          ]
      ],
      junit                 : "junit:junit:${versions.junit}",
      mockito: [
          core              : "org.mockito:mockito-core:${versions.mockito_core}",
          kotlin            : "com.nhaarman.mockitokotlin2:mockito-kotlin:${versions.mockito_kotlin}"
      ]
  ]

  // @formatter:on

  repositories {
    google()
    jcenter()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:${buildConfig.gradlePlugin}"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
  }
}

allprojects {
  repositories {
    google()
    jcenter()
  }

  configurations.all {
    resolutionStrategy {
      eachDependency { details ->
        if (details.requested.group == 'org.jetbrains.kotlin') {
          details.useVersion versions.kotlin
        }
      }
    }
  }

  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
      allWarningsAsErrors = true
    }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}
